/* You can add global styles to this file, and also import other style files */
/*
Color System Start
*/

@import "~bootstrap/scss/bootstrap.scss";
@import "~font-awesome/css/font-awesome.css";
$danger: #e01f3d;
$danger-primary: #e1193b;

//success
$success: #23b684;
$success-secondary: #30ba8b;

// light
$light: #fff;
$light-secondary: #ccc;

//dark
$dark: #232323;
$dark-primary: #131313;
$dark-secondary: #212121;

$duration: 0.6s;
$ease: cubic-bezier(0.5, 0, 0.2, 1);
$ease-out: cubic-bezier(0.2, 0, 1, 0.5);
$blue: #00b5d5;
/*
Color System End
*/

*,
*::before,
*::after {
  box-sizing: border-box;
  position: relative;
  margin: 0;
  padding: 0;
}

html,
body {
  height: 100%;
  background: $dark-primary;
}

body {
  min-width: 320px;
  font-family: "Oswald", sans-serif;
}

.wrapper {
  min-height: 100%;
  padding-top: 18px;
  padding-bottom: 60px;
}

ul {
  list-style-type: none !important;
  color: $light;
}
li {
  text-decoration: none !important;
  outline: none !important;
}
.navbar {
  display: flex;
  justify-content: space-between;
  position: fixed;
  background-color: $dark;
  top: 0;
  left: 0;
  right: 0;
  padding: 0 !important;
  height: 76px;
  &__nav-list {
    max-width: 670px;
    width: 100%;
    height: 100%;
    color: $light;
    display: flex;
    justify-content: center;
  }
}

.nav-list {
  display: flex;
  height: 100%;
  align-items: center;
  justify-content: center;
  &__item {
    display: flex;
    align-items: center;
    height: 100%;
    font-size: 18px;
    padding: 0px 10px;
    margin: 0 10px;
    cursor: pointer;
    span {
      position: relative;
      &::before {
        content: "";
        position: absolute;
        margin: auto;
        left: 0;
        right: 0;
        bottom: -5px;
        display: block;
        width: 0;
        height: 2px;
        background-color: $danger-primary;
        transition: all 0.3s;
      }
    }
    &:hover {
      span::before {
        width: 90%;
      }
    }
  }
}

/*
======== mixins =======
*/
@mixin make-center {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}
.abs-center {
  @include make-center();
}

/*
======== home content  =======
*/
.main-bcground {
  position: relative;
  font-family: "Comic Neue", cursive;
  height: 700px;
  max-height: 100%;
  margin: auto;
  p {
    color: $light;
    font-size: 28px;
    animation: incomming-text 4s infinite;
  }
  img {
    position: absolute;
    top: 0;
    opacity: 0;
    height: 100%;
    animation: img-slides 4s infinite;
  }
  .btn {
    color: $light;
    border: 1px solid $light;
    outline: none !important;
    box-shadow: none !important;
    &:hover {
      background: $light;
      color: $dark-primary;
      transition: all 0.5s cubic-bezier(0, 0, 0.82, 1.07);
    }
  }
}

/*social icons*/

.social-icons {
  display: flex;
  &__item {
    margin: 0 40px;
  }
}

.social-icon {
  font-size: 40px;
  color: #262626;
  line-height: 80px;
  transition: 0.5s;
}

.pushable {
  position: relative;
  display: block;
  width: 80px;
  height: 80px;
  background: #fff;
  text-align: center;
  transform: perspective(1000px) rotate(-30deg) skew(25deg) translate(0, 0);
  transition: 0.5s;
  box-shadow: -20px 20px 10px rgba(0, 0, 0, 0.5);
  &::before {
    content: "";
    position: absolute;
    top: 10px;
    left: -20px;
    height: 100%;
    width: 20px;
    background: #b1b1b1;
    transition: 0.5s;
    transform: rotate(0deg) skewY(-45deg);
  }
  &::after {
    content: "";
    position: absolute;
    bottom: -20px;
    left: -10px;
    height: 20px;
    width: 100%;
    background: #b1b1b1;
    transition: 0.5s;
    transform: rotate(0deg) skewX(-45deg);
  }
  &:hover {
    transform: perspective(1000px) rotate(-30deg) skew(25deg)
      translate(-20px, 20px);
  }
}

/*======== animations======*/
@keyframes incomming-text {
  0% {
    opacity: 0;
  }
  95% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    visibility: hidden;
  }
}

@keyframes img-slides {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

/* buttons*/

.btn-light {
  color: white;
}
.btn-transparent {
  background: transparent;
}

// VIDEO COMPONENT START

#app {
  overflow: hidden;
  padding: 2rem;
  background: #fff;
  box-shadow: 0 0 30px rgba(0, 0, 0, 0.3);
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
  grid-gap: 2rem;
  align-items: stretch;

  &::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 0;
    width: 100%;
    height: 100%;
    // z-index: 0;
    background-color: #2d3238;
    transition: transform ($duration) ($ease);
  }
}

.details {
  font-size: 2vmin;
  grid-column: 1;
  grid-row: 1;
  align-self: center;
  transition: transform ($duration) ($ease), opacity ($duration) linear;
  h1 {
    margin: 0 0 1rem;
  }
}

.hero {
  grid-column: 1 / -1;
  grid-row: 1 / -1;
  padding: 0;
  margin: 0;
  overflow: hidden;
  transition: transform ($duration) ($ease);
}

.hero-inner {
  display: block;
  width: 100%;
  height: 100%;
  transition: inherit;
  overflow: hidden;
  video {
    position: absolute;
    top: 0;
    left: 0;
    max-width: none;
    transition: inherit;
  }
}

.hero-image {
  display: block;
  width: 100%;
  height: 100%;
  max-width: none;
  transition: inherit;
}

.hero-details {
  position: absolute;
  bottom: 2rem;
  left: 2rem;
  transition: inherit;
  overflow: hidden;
  width: 100%;
}

.hero-details-inner {
  transition: inherit;
  transform: translateY(-200%);
  opacity: 0;
}

.play {
  $size: 15vmin;
  height: ($size);
  width: ($size);
  margin: auto;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  // z-index: 199;
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: ($size);
  cursor: pointer;

  &::before {
    $size: 7.5vmin;
    font-size: $size;
    height: 90%;
    width: 90%;
    content: "â–¸";
    color: #333;
    position: absolute;
    background-color: rgba(white, 0.5);
    border-radius: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    will-change: transform;
    transition: transform $duration $ease;
    transition-duration: $duration;
  }

  &::after {
    content: "";
    position: absolute;
    height: 100%;
    width: 100%;
    top: 0;
    left: 0;
    border: 4vmin solid $blue;
    border-radius: inherit;
    transition: transform, opacity;
    transition-duration: $duration, 0s;
  }
}

.graph {
  width: 50%;
  padding-top: 4%;
  margin-bottom: 5%;
  transition: inherit;

  &::before,
  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transition: inherit;
    transform: translateX(-110%);
    transform-origin: 0 0;
    opacity: 0.8;
  }

  &::before {
    background: repeating-linear-gradient(
      -45deg,
      #fff,
      #fff 1px,
      transparent 1px,
      transparent 3px
    );
  }
  &::after {
    width: 110%;
    top: 40%;
    background: $blue;
    transition-duration: 1;
  }
}
/* data state machine*/

[data-state="small"] {
  &::before {
    transfrom: translateY(100%);
    -webkit-transform: translateY(100%);
  }
  .hero {
    transform: translateX(50%);
  }

  .hero-inner {
    transform: translateX(-50%);
  }

  .hero-image {
    transform: translateX(25%);
  }

  .hero-details-inner {
    transform: translateY(100%);
  }

  .play::before {
    transition-duration: 0s;
    transform: translateY(150%);
  }

  .play::after {
    opacity: 0;
    transform: scale(0);
  }
}

[data-state="medium"] {
  $duration: 1s;
  &::before {
    transition-delay: ($duration);
    transform: tranlateY(0);
  }

  .details {
    $duration: 0.8s;
    $ease: ($ease-out);
    transfrom: translateY(-200%);
    -webkit-transform: translateY(-200%);
    opacity: 0;
  }
  video {
    display: none;
  }
  .hero-details {
    transition-delay: calc(($duration));
  }

  .hero-details-inner {
    transform: translateY(-0%);
    opacity: 1;
  }

  .play:before {
    transition-duration: ($duration);
    transition-delay: calc(($duration) * 0.5);
    transform: none;
  }

  .play:after {
    opacity: 0;
    transform: scale(0.1);
  }
  .graph::before,
  .graph::after {
    transform: translateX(0);
  }
}

[data-state="large"] {
  .hero {
    transform: scale(1.2);
    cursor: pointer;
    video {
      transform: scale(0.9);
    }
  }

  .details {
    transform: translateY(-200%);
    opacity: 0;
  }
  .play::before {
    $ease: ($ease-out);
    transform: translateY(-120%);
    transition-delay: calc(($duration) * 0.7);
  }

  .play::after {
    $duration: 1.2s;
    $ease: ease-out;
    transform: scale(5);
  }
}

//VIDEO COMPONENT END
